[package]
name = "pingap"
version = "0.10.6"
authors = ["Tree Xie <tree.xie@outlook.com>"]
edition = "2021"
categories = ["network-programming", "web-programming::http-server"]
keywords = ["proxy", "http", "gateway"]
description = "A reverse proxy like nginx"
license = "Apache-2.0"
homepage = "https://github.com/vicanso/pingap"
repository = "https://github.com/vicanso/pingap"
exclude = ["asset/*", "test/*", "Cargo.lock", "web/*", ".github/*", "docs/*"]
readme = "./README.md"
rust-version = "1.81"
default-run = "pingap"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
ahash = { version = "0.8.11", default-features = false }
arc-swap = "1.7.1"
async-trait = "0.1.88"
bytes = "1.10.1"
cfg-if = "1.0.0"
clap = { version = "4.5.35", features = [
    "derive",
    "std",
    "help",
    "usage",
], default-features = false }
crc32fast = "1.4.2"
crossbeam-channel = "0.5.15"
flate2 = "1.1.1"
glob = "0.3.2"
hex = "0.4.3"
http = "1.3.1"
humantime = "2.2.0"
humantime-serde = "1.1.1"
itoa = "1.0.15"
nanoid = "0.4.0"
nix = { version = "0.29.0", features = ["signal"] }
num_cpus = "1.16.0"
once_cell = "1.21.3"
pingora = { git = "https://github.com/cloudflare/pingora", rev = "caa6a0879e41d45b9d2798d9791a981c7a45de5c", default-features = false, features = [
    # pingora = { version = "0.4.0", default-features = false, features = [
    "lb",
    "openssl",
    "cache",
] }
regex = { version = "1.11.1", default-features = false }
rust-embed = { version = "8.6.0", features = [
    "mime-guess",
    "compression",
], default-features = false }
scopeguard = "1.2.0"
serde = "1.0.219"
serde_json = "1.0.140"
sha2 = { version = "0.10.8", default-features = false }
snafu = { version = "0.8.5", features = ["std"], default-features = false }
substring = "1.4.5"
tokio = { version = "1.44.2", default-features = false, features = ["fs"] }
toml = "0.8.20"
tracing = "0.1.41"
url = "2.5.4"
urlencoding = "2.1.3"
uuid = { version = "1.16.0", features = [
    "v7",
    "std",
    "fast-rng",
], default-features = false }
ctor = "0.4.1"
pingap-core = { version = "0.10.5", path = "pingap-core" }
pingap-util = { version = "0.10.5", path = "pingap-util" }
pingap-webhook = { version = "0.10.5", path = "pingap-webhook" }
pingap-config = { version = "0.10.5", path = "pingap-config" }
pingap-cache = { version = "0.10.5", path = "pingap-cache" }
pingap-upstream = { version = "0.10.5", path = "pingap-upstream" }
pingap-certificate = { version = "0.10.5", path = "pingap-certificate" }
pingap-location = { version = "0.10.5", path = "pingap-location" }
pingap-performance = { version = "0.10.5", path = "pingap-performance" }
pingap-logger = { version = "0.10.5", path = "pingap-logger" }
pingap-acme = { version = "0.10.5", path = "pingap-acme" }
pingap-plugin = { version = "0.10.5", path = "pingap-plugin" }
pingap-otel = { version = "0.10.5", path = "pingap-otel", optional = true }
pingap-sentry = { version = "0.10.5", path = "pingap-sentry", optional = true }
pingap-pyroscope = { version = "0.10.5", path = "pingap-pyroscope", optional = true }

[target.'cfg(target_env = "musl")'.dependencies]
mimalloc = "0.1.46"

[features]
pyro = ["pingap-pyroscope"]
full = [
    "pingora/sentry",
    "pingap-cache/full",
    "pingap-core/full",
    "pingap-performance/full",
    "pingap-otel",
    "pingap-sentry",
]
perf = ["pyro", "full"]
default = []


[dev-dependencies]
criterion = { version = "0.5.1", features = ["html_reports"] }
pretty_assertions = "1.4.0"
tokio-test = "0.4.4"


[profile.release]
codegen-units = 1
lto = true
strip = "debuginfo"

[profile.release-perf]
inherits = "release"
debug = 1
strip = "none"


[[bench]]
name = "bench"
harness = false

[package.metadata.cargo-machete]
ignored = ["humantime-serde"]

[workspace]
members = [
    "pingap-acme",
    "pingap-cache",
    "pingap-certificate",
    "pingap-config",
    "pingap-core",
    "pingap-discovery",
    "pingap-health",
    "pingap-location",
    "pingap-logger",
    "pingap-otel",
    "pingap-performance",
    "pingap-plugin",
    "pingap-pyroscope",
    "pingap-sentry",
    "pingap-upstream",
    "pingap-util",
    "pingap-webhook",
]
[workspace.dependencies]
once_cell = "1.21.3"
bytes = "1.10.1"
http = "1.3.1"
pingora = { git = "https://github.com/cloudflare/pingora", rev = "caa6a0879e41d45b9d2798d9791a981c7a45de5c", default-features = false, features = [
    # pingora = { version = "0.4.0", default-features = false, features = [
    "lb",
    "openssl",
    "cache",
] }
regex = { version = "1.11.1", default-features = false }
snafu = { version = "0.8.5", features = ["std"], default-features = false }
substring = "1.4.5"
itoa = "1.0.15"
toml = "0.8.20"
tokio = { version = "1.44.2", default-features = false, features = ["fs"] }
tracing = "0.1.41"
async-trait = "0.1.88"
serde = "1.0.219"
serde_json = "1.0.140"
strum = { version = "0.27.1", features = ["derive"] }
reqwest = { version = "0.12.15", default-features = false, features = [
    "json",
    "default-tls",
] }
futures = "0.3.31"
humantime = "2.2.0"
url = "2.5.4"
arc-swap = "1.7.1"
bytesize = { version = "2.0.1", features = ["serde"] }
futures-util = "0.3.31"
base64 = "0.22.1"
humantime-serde = "1.1.1"
memory-stats = { version = "1.2.0", features = ["always_use_statm"] }
scopeguard = "1.2.0"
walkdir = "2.5.0"
ahash = { version = "0.8.11", default-features = false }
derive_more = { version = "2.0.1", default-features = false, features = [
    "debug",
] }
pingora-runtime = "0.4.0"
time = { version = "0.3.41", features = ["local-offset"] }
sysinfo = { version = "0.34.2", features = [
    "system",
], default-features = false }
num_cpus = "1.16.0"
cfg-if = "1.0.0"
chrono = { version = "0.4.40", default-features = false, features = [
    "std",
    "clock",
] }
flate2 = "1.1.1"
crc32fast = "1.4.2"
hex = "0.4.3"
cookie = "0.18.1"
nanoid = "0.4.0"
urlencoding = "2.1.3"
glob = "0.3.2"
mime_guess = "2.0.5"
dirs = "6.0.0"
path-absolutize = "3.1.1"

[patch.crates-io]
sfv = { git = "https://github.com/undef1nd/sfv.git", tag = "v0.9.4" }
