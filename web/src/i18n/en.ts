export default {
  themeSystem: "System Theme",
  themeDark: "Dark Theme",
  themeLight: "Light Theme",
  save: "Save",
  moreSettings: "More Settings",
  lessSettings: "Less Settings",
  nav: {
    basic: "Basic",
    server: "Server",
    location: "Location",
    upstream: "Upstream",
    plugin: "Plugin",
    certificate: "Certificate",
  },
  basic: {
    name: "Name",
    namePlaceholder: "Input the name of pingap process",
    threads: "Threads",
    threadsPlaceholder: "Input the default thread count",
    workStealing: "Work Strealing",
    logLevel: "Log Level",
    logLevelPlaceholder: "Input the log level of pingap(e.g. INFO, DEBUG)",
    logBufferedSize: "Log Buffered Size",
    logBufferedSizePlaceholder: "Input the buffer size for log(e.g. 64kb, 1mb)",
    logFormatJson: "Json Log Format",
    gracePeriod: "Grace Period",
    gracePeriodPlaceholder: "Input grace period for exit(e.g. 30s, 1m)",
    gracefulShutdownTimeout: "Graceful Shutdown Timeout",
    gracefulShutdownTimeoutPlaceholder:
      "Input graceful shutdown timeout(e.g. 10s)",
    autoRestartCheckInterval: "Auto Restart Check Interval",
    autoRestartCheckIntervalPlaceholder:
      "Input auto restart check interval(e.g. 30s)",
    pidFile: "Pid File",
    pidFilePlaceholder: "Input pid file path(e.g. /opt/pingap/pingap.pid)",
    cacheDirectory: "Cache Directory",
    cacheDirectoryPlaceholder:
      "Input the file cache directory(e.g. /opt/cache)",
    cacheMaxSize: "Cache Max Size",
    cacheMaxSizePlaceholder: "Input max size of cache(e.g. 100mb)",
    upgradeSock: "Upgrade Sock For Daemon",
    upgradeSockPlaceholder: "Input upgrade unix sock for daemon",
    user: "User For Daemon",
    userPlaceholder: "Input user for daemon",
    group: "Group For Daemon",
    groupPlaceholder: "Input group for daemon",
    webhookType: "Webhook Type",
    webhookTypePlaceholder: "Select webhook type",
    webhookNotifications: "Webhook Notifications",
    webhookNotificationsPlaceholder: "Select webhook notifications",
    webhook: "Webhook Http Url",
    webhookPlaceholder: "Input the url for webhook notification",
    sentry: "Sentry Connect Url",
    sentryPlaceholder: "Input the connect url of sentry",
    pyroscope: "Pyroscope Connect Url",
    pyroscopePlaceholder: "Input the connect url of pyroscope",
    errorTemplate: "Error Template",
    errorTemplatePlaceholder:
      "Input the error template, it should be html or json",
  },
  server: {
    name: "Name",
    namePlaceholder: "Input the name of server",
    addr: "Listen Addresses",
    addrPlaceholder: "Input listen addresses, separated by comma",
    locations: "Locations",
    locationsPlaceholder: "Select the locations for server",
    threads: "Threads",
    threadsPlaceholder: "Input the thread count of server",
    globalCertificates: "Using Global Certificates",
    accessLog: "Access Log Format",
    accessLogPlaceholder: "Input the format layout for access",
    enabledH2: "Enable Http2(h2c)",
    tlsCipherList: "Tls Cipher List",
    tlsCipherListPlaceholder:
      "Input the cipher list for protocols before tlsv1.3",
    tlsCiphersuites: "Tls Ciphers",
    tlsCiphersuitesPlaceholder: "Input the ciphers for protocol tlsv1.3",
    tlsMinVersion: "Min Tls",
    tlsMaxVersion: "Max Tls",
    tcpFastOpen: "Tcp Fast Open",
    tcpFastOpenPlaceholder: "Input the backlog size of tcp fast open(e.g. 10)",
    tcpIdle: "Tcp Keepalive Idle",
    tcpIdlePlaceholder: "Input tcp keepalive idle duration(e.g. 2m)",
    tcpInterval: "Tcp Keepalive Interval",
    tcpIntervalPlaceholder: "Input tcp keepalive interval duration(e.g. 30s)",
    tcpProbeCount: "Tcp Keepalive Probe Count",
    tcpProbeCountPlaceholder: "Input tcp keepalive probe count(e.g. 9)",
    prometheusMetrics: "Prometheus",
    prometheusMetricsPlaceholder:
      "Input the pull path of push gateway for prometheus",
    otlpExporter: "Otlp Exporter",
    otlpExporterPlaceholder: "Input the exporter for opentelemetry",
    remark: "Remark",
  },
  location: {
    name: "Name",
    namePlaceholder: "Input the name of location",
    host: "Host",
    hostPlaceholder:
      "Input the host for location, multiple hosts separated by comma",
    path: "Path",
    pathPlaceholder:
      "Input the path for location, supports regexp, prefix and equal mode",
    upstream: "Upstream",
    upstreamPlaceholder: "Select the upstream for location",
    rewrite: "Path Rewrite",
    rewritePlaceholder: "Input the rewrite for path(e.g. ^/api/ /)",
    proxySetHeaders: "Proxy Set Headers",
    proxySetHeadersPlaceholder:
      "Input the http header name:Input the http header value",
    proxyAddHeaders: "Proxy Add Headers",
    proxyAddHeadersPlaceholder:
      "Input the http header name : Input the http header value",
    weight: "Weight",
    weightPlaceholder: "Input the weight of location",
    clientMaxBodySize: "Client Max Body Size",
    clientMaxBodySizePlaceholder: "Input the max body size(e.g. 1mb)",
    plugins: "Plugins",
    pluginsPlaceholder: "Select the plugins for location",
    remark: "Remark",
  },
  upstream: {
    name: "Name",
    namePlaceholder: "Input the name of upstream",
    addrs: "Uptream Address",
    addrsPlaceholder:
      "Input the address of upstream(e.g. 127.0.0.1:3000) : Input the weight of upstream",
    discovery: "Service Discovery",
    discoveryPlaceholder: "Select a discovery for upstream",
    updateFrequency: "Discovery Update Frequency",
    updateFrequencyPlaceholder:
      "Input the update frequency of discovery(e.g. 30s)",
    algo: "Load Balancer Algorithm",
    algoPlaceholder: "Input algorithm for load balance(e.g. hash:ip)",
    healthCheck: "Health Check",
    healthCheckPlaceholder:
      "Input upstream health check url, supports http or tcp",
    connectionTimeout: "Connection Timeout",
    connectionTimeoutPlaceholder:
      "Input the connection timeout for upstream(e.g. 30s)",
    totalConnectionTimeout: "Total Connection Timeout",
    totalConnectionTimeoutPlaceholder:
      "Input the total connection timeout for upstream(e.g. 1m)",
    readTimeout: "Read Timeout",
    readTimeoutPlaceholder: "Input the read timeout for upstream(e.g. 30s)",
    writeTimeout: "Write Timeout",
    writeTimeoutPlaceholder: "Input the write timeout for upstream(e.g. 10s)",
    idleTimeout: "Idle Timeout",
    idleTimeoutPlaceholder:
      "Input the idle timeout for upstream connection(e.g. 2m)",
    alpn: "Alpn",
    sni: "Sni",
    sniPlaceholder: "Input server name indication for tls protocol",
    verifyCert: "Verify Certificate",
    ipv4Only: "Ipv4 Only",
    enableTracer: "Enable Tracer",
    tcpRecvBuf: "Tcp Recv Buf",
    tcpRecvBufPlaceholder: "Input the tcp receive buffer limit size",
    tcpIdle: "Tcp Idle",
    tcpIdlePlaceholder: "Input the idle timeout for tcp connection",
    tcpInterval: "Tcp Keepalive Probe Interval",
    tcpIntervalPlaceholder: "Input the interval for tcp keepalive probe",
    tcpProbeCount: "Tcp Probe Count",
    tcpProbeCountPlaceholder: "Input the probe count(e.g. 9)",
    remark: "Remark",
  },
  certificate: {
    name: "Name",
    namePlaceholder: "Input the name of certificate",
    tlsCert: "Tls Cert",
    tlsCertPlaceholder: "Input the pem format certificate of tls",
    tlsKey: "Tls Key",
    tlsKeyPlaceholder: "Input the pem format key of tls",
    tlsChain: "Tls Chain",
    tlsChainPlaceholder: "Input the pem format chain of tls",
    domains: "Acme Domains",
    domainsPlaceholder:
      "Input the domains of acme, multiple domains separated by comma",
    certificateFile: "Certificate File",
    certificateFilePlaceholder: "Input the file for saving certificate",
    acme: "Acme",
    isDefault: "Default Certificate",
  },
  plugin: {
    name: "Name",
    namePlaceholder: "Input the name of plugin",
    step: "Plugin Step",
    statsPath: "Stats Path",
    statsPathPlaceholder: "Input the path for stats",
    pingPath: "Ping Path",
    pingPathPlaceholder: "Input the path for ping health check",
    adminPath: "Admin Path",
    adminPathPlaceholder: "Input the path for admin plugin",
    adminIpFailLimit: "Ip Fail Limit",
    adminIpFailLimitPlaceholder: "Input the fail ip limit count",
    adminAuthorization: "Authorization",
    adminAuthorizationPlaceholder:
      "Base64 value for basic auth(base64(user:pass))",
    dirPath: "Directory",
    dirPathPlaceholder: "Input the path for static serve",
    dirIndex: "Index",
    dirIndexPlaceholder: "Input the index file(e.g. index.html)",
    dirChunkSize: "Chunk Size",
    dirChunkSizePlaceholder:
      "Input the chunk size for file response(e.g. 16kb)",
    dirAutoIndex: "Support Director Index",
    dirMaxAge: "Cache Max Age",
    dirMaxAgePlaceholder: "Input the max age for cache control(e.g. 24h)",
    dirCachePrivate: "Private Cache",
    dirCharset: "Charset",
    dirCharsetPlaceholder: "Input the charset of file response",
    dirDownload: "Support Download",
    dirHeaderName: "Response Headers",
    dirHeaderNamePlaceholder:
      "Input the response header name : Input the response header value",
    mockPath: "Path",
    mockPathPlaceholder: "Input the path for mock",
    mockStatus: "Status",
    mockStatusPlaceholder: "Input the status for mock response",
    mockResponseDelay: "Delay",
    mockResponseDelayPlaceholder: "Input the dalay for mock(e.g. 5s)",
    mockHeaderName: "Headers",
    mockHeaderNamePlaceholder: "Input the header name : Input the header value",
    mockData: "Data",
    mockDataPlaceholder: "Input the data for mock response",
    redirectPrefix: "Prefix",
    redirectPrefixPlaceholder: "Input prefix url append to redirect url",
    redirectHttps: "Https",
    cacheLock: "Lock",
    cacheLockPlaceholder:
      "Input the lock duration lookups to the same asset(e.g. 2s)",
    cacheMaxFileSize: "Max File Size",
    cacheMaxFileSizePlaceholder:
      "Input the cache max file size of http response(e.g. 1mb)",
    cacheNamespace: "Namespace",
    cacheNamespacePlaceholder: "Input the namespace of cache",
    cacheMaxTtl: "Max Ttl",
    cacheMaxTtlPlaceholder: "Input the max cache ttl of cache(e.g. 1h)",
    cacheEviction: "Support Eviction",
    cachePredictor: "Support Predictor",
    cacheHeaders: "Headers",
    cacheHeadersPlaceholder: "Input the header name : Input the header value",
    cachePurgeIpList: "Ip Allow Purge",
    cachePurgeIpListPlaceholder: "Input the ip which allow purge",
    requestIdAlgo: "Algorithm",
    requestIdAlgoPlaceholder: "Select the algorithm of request id",
    requestIdLength: "Size",
    requestIdLengthPlaceholder: "Input the size of request id(for nanoid)",
    requestIdHeaderName: "Header Name",
    requestIdHeaderNamePlaceholder: "Input the header name of request id",
    compressionGzipLevel: "Gzip Level",
    compressionGzipLevelPlaceholder: "Input the gzip level(1-9)",
    compressionBrLevel: "Brotli Level",
    compressionBrLevelPlaceholder: "Input the brotli level(1-11)",
    compressionZstdLevel: "Zstd Level",
    compressionZstdLevelPlaceholder: "Input the zstd level(1-22)",
    compressionDecompression: "Support Decompression",
    acceptEncodingList: "Accept Encoding",
    acceptEncodingListPlaceholder: "Input the request accept encoding",
    acceptEncodingOnlyOne: "Supports One Encoding",
    keyAuthQuery: "Query",
    keyAuthQueryPlaceholder: "Input the name of query",
    keyAuthHeader: "Header",
    keyAuthHeaderPlaceholder: "Input the name of header",
    keyAuthFailDelay: "Fail Delay",
    keyAuthFailDelayPlaceholder: "Input the delay duration of fail auth",
    keyAuthHideCredentials: "Hide Credentials",
    keyAuthValues: "Auth Values",
    keyAuthValuesPlaceholder: "Input the value of auth value",
    basicAuthList: "Basic Authorization",
    basicAuthListPlaceholder:
      "Input basic authorization, base64(account:password)",
    basicAuthFailDelay: "Fail Delay",
    basicAuthFailDelayPlaceholder: "Input the delay duration of fail auth",
    basicAuthHideCredentials: "Hide Credentials",
    jwtAuthHeader: "Header",
    jwtAuthHeaderPlaceholder: "Input the name of header",
    jwtAuthQuery: "Query",
    jwtAuthQueryPlaceholder: "Input the name of query",
    jwtAuthCookie: "Cookie",
    jwtAuthCookiePlaceholder: "Input the name of cookie",
    jwtSignPath: "Sign Path",
    jwtSignPathPlaceholder: "Input the jwt sign path",
    jwtAuthFailDelay: "Fail Delay",
    jwtAuthFailDelayPlaceholder: "Input the delay duration of fail auth",
    jwtSignAlgorithm: "Algorithm",
    jwtAuthSecret: "Secret",
    jwtAuthSecretPlaceholder: "Input the secret for jwt",
    limitCategory: "Type",
    limitTag: "Category",
    limitKey: "Key",
    limitKeyPlaceholder: "Input the name of limit key",
    limitMax: "Max",
    limitMaxPlaceholder: "Input the max value of limit",
    limitInterval: "Interval",
    limitIntervalPlaceholder: "Input the interval of limit",
    ipRestrictionMode: "Restriction Mode",
    ipList: "Ip List",
    ipListPlaceholder: "Input the ip for restriction",
    ipRestrictionMessage: "Message",
    ipRestrictionMessagePlaceholder: "Input the message for restriction",
    refererRestrictionMode: "Restriction Mode",
    refererList: "Referer List",
    refererListPlaceholder: "Input the referer for restriction",
    refererRestrictionMessage: "Message",
    refererRestrictionMessagePlaceholder: "Input the message for restriction",
    csrfTokenPath: "Token Path",
    csrfTokenPathPlaceholder: "Input the token path for csrf",
    csrfName: "Name",
    csrfNamePlaceholder: "Input the name of csrf",
    csrfKey: "key",
    csrfKeyPlaceholder: "Input the key of csrf",
    csrfTtl: "Ttl",
    csrfTtlPlaceholder: "Input the ttl of csrf",
    corsPath: "Path",
    corsPathPlaceholder: "Input the path for cors",
    corsAllowOrigin: "Allow Origin",
    corsAllowOriginPlaceholder: "Input the allow origin header",
    corsAllowMethods: "Allow Methods",
    corsAllowMethodsPlaceholder: "Input the allow methods header",
    corsAllowHeaders: "Allow Headers",
    corsAllowHeadersPlaceholder: "Input the allow headers",
    corsAllowCredentials: "Allow Credentials",
    corsMaxAge: "Max Age",
    corsMaxAgePlaceholder: "Input the max age",
    corsExposeHeaders: "Expose Headers",
    corsExposeHeadersPlaceholder: "Input the expost headers",
    responseHeadersAddHeader: "Add Header",
    responseHeadersAddHeaderPlaceholder:
      "Input the header name : Input the header value",
    responseHeadersSetHeader: "Set Header",
    responseHeadersSetHeaderPlaceholder:
      "Input the header name : Input the header value",
    responseHeadersRemoveHeader: "Remove Header",
    responseHeadersRemoveHeaderPlaceholder: "Input the header name",
  },

  // header
  "header.themeSystem": "System",
  "header.themeDark": "Dark",
  "header.themeLight": "Light",
  "header.title": "Informations",
  "header.startTime": "Start Time: ",
  "header.memory": "Memory: ",
  "header.architecture": "Architecture: ",
  "header.configHash": "Config Hash: ",
  "header.restart": "Restart Pingap",
  "header.restartTips": "Pingap will graceful restart with new configuration.",
  "header.confirmTips": "Are you sure to restart pingap?",
  "header.confirm": "Restart",
  "header.cancel": "Cancel",
  // basic info
  "basic.title": "Modify the basic configurations",
  "basic.description":
    "The basic configuration of pingap mainly includes various configurations such as logs, graceful restart, threads, etc.",
  "basic.name": "Name",
  "basic.pidFile": "Pid File(only for deamon)",
  "basic.upgradeSock": "Upgrade Sock For Daemon",
  "basic.threads": "Each Server Default Threads(default:1)",
  "basic.workStealing": "Work Stealing",
  "basic.user": "User For Daemon",
  "basic.group": "Group For Daemon",
  "basic.gracePeriod": "Grace Period For Exit(default:5m)",
  "basic.gracefulShutdownTimeout": "Graceful Shutdown Timeout(default:5s)",
  "basic.logLevel": "Log Level(e.g. info, error, warn, debug)",
  "basic.logBufferedSize": "Log Buffered Size(e.g. 1kb, 1mb)",
  "basic.logFormatJson": "Log Format Json(default:false)",
  "basic.autoRestartCheckInterval": "Auto Restart Check Interval(default:90s)",
  "basic.upstreamKeepalivePoolSize":
    "Upstream Keepalive Pool Size(default:128)",
  "basic.cacheDirectory":
    "Program Cache Directory(If set, file caching is used)",
  "basic.cacheMaxSize": "Program Sharing Cache Max Size(default:100MB)",
  "basic.webhookType": "Webhook Type",
  "basic.webhookNotifications": "Webhook Notifications",
  "basic.webhook": "Webhook Http Url",
  "basic.sentry": "Sentry Connect Url",
  "basic.pyroscope": "Pyroscope Connect Url(should rebuild with pyro feature)",
  "basic.errorTemplate": "Error Template(default is html, it can be json too)",
  // server info
  "server.title": "Modify server configuration",
  "server.description":
    "Server configuration including listening ports, threads and log format layout",
  "server.addr": "Listen Address, Multiple Addresses Separated By Comma",
  "server.locations": "Select Locations",
  "server.threads": "The Threads Of Server(default:1)",
  "server.accessLog": "Access Log Format Layout(e.g. thiny, short, combined)",
  "server.globalCertificates": "Use The Global Certificates(for https)",
  "server.enabledH2": "Enable Http2(h2c for http)",
  "server.tlsCipherList": "Tls Ciphers For Protocols Before TLSv1.3",
  "server.tlsCiphersuites": "Tls Ciphers For Protocols TLSv1.3",
  "server.tlsMinVersion": "Tls Min Proto Version",
  "server.tlsMaxVersion": "Tls Max proto Version",
  "server.tcpFastOpen": "The Backlog Size Of Tcp Fast Open(e.g. 10)",
  "server.tcpIdle": "Tcp Keepalive Idle Duration(e.g. 2m)",
  "server.tcpInterval": "Tcp Keepalive Interval Duration(e.g. 60s)",
  "server.tcpProbeCount": "Tcp Keepalive Probe Max Number(e.g. 9)",
  "server.prometheusMetrics":
    "The Metrics Path Of Prometheus(it can be push gateway uri or path for pull mode)",
  "server.otlpExporter": "Open Telemetry Exporter Url",

  "server.remark": "Remark",
  // location info
  "location.title": "Modify location configuration",
  "location.description":
    "Location configuration including host and path for match, request headers",
  "location.host": "Host, Multiple Hosts Separated By Comma",
  "location.path": "Path(support regexp, prefix and equal mode)",
  "location.upstream": "Select Upstream",
  "location.weight": "The Weight Of Location",
  "location.rewrite": "Regexp Rewrite(e.g. ^/api/ /)",
  "location.plugins": "Select Plugins For Location",
  "location.clientMaxBodySize": "Client Max Body Size(e.g. 10mb)",
  "location.proxySetHeaders": "Set Proxy Headers",
  "location.proxyAddHeaders": "Add Proxy Headers",
  "location.remark": "Remark",
  // upstream info
  "upstream.title": "Modify upstream configuration",
  "upstream.description":
    "Upstream configuration including address list, timeouts and tcp options",
  "upstream.addrs": "Upstream Addrs(ip:port)",
  "upstream.discovery":
    "Upstream Node Discover Type(domain should use dns discovery)",
  "upstream.updateFrequency": "Discovery Update Frequency(e.g. 30s)",
  "upstream.algo": "Load Balancer Algorithm(default:roundRobin)",
  "upstream.healthCheck": "Health Check(support tcp or http check)",
  "upstream.connectionTimeout": "Connection Timeout(e.g. 30s)",
  "upstream.totalConnectionTimeout": "Total Connection Timeout(e.g. 60s)",
  "upstream.readTimeout": "Read Timeout(e.g. 10s)",
  "upstream.writeTimeout": "Write Timeout(e.g. 30s)",
  "upstream.idleTimeout": "Idle Timeout(e.g. 5m)",
  "upstream.alpn": "Alpn(default:H1)",
  "upstream.sni": "Sni",
  "upstream.verifyCert": "Verify Cert",
  "upstream.ipv4Only": "Ipv4 Only",
  "upstream.enableTracer": "Enable Tracer(default:false)",
  "upstream.tcpFastOpen": "Enable tcp fast open",
  "upstream.tcpRecvBuf": "Tcp Recv Buffer Size(e.g. 4kb)",
  "upstream.tcpIdle": "Tcp Keepalive Idle Duration(e.g. 2m)",
  "upstream.tcpInterval": "Tcp Keepalive Interval Duration(e.g. 10s)",
  "upstream.tcpProbeCount": "Tcp Keepalive Probe Max Number(e.g. 1000)",
  "upstream.remark": "Remark",
  // certificate info
  "certificate.title": "Certificate for https",
  "certificate.description": "The setting of certificate",
  "certificate.tlsCert": "Tls Cert Pem",
  "certificate.tlsKey": "Tls Key Pem",
  "certificate.tlsChain": "Tls Chain Pem",
  "certificate.domains": "The Domain List For Let's Encrypt",
  "certificate.certificateFile":
    "The File For Saving Let's Encrypt Certificate",
  "certificate.acme": "The Acme For Generating Certificate",
  "certificate.isDefault": "Default certificate for https",
  // plugin info
  "plugin.title": "Modify plugin configuration",
  "plugin.description": "All plugin configuration of pingap",
  "plugin.step": "Plugin Exec Step",
  "plugin.category": "Plugin Category",
  "plugin.config": "Plugin Config Data",
  "plugin.remark": "Remark",
  // form
  "form.name": "Name",
  "form.removing": "Removing",
  "form.remove": "Remove",
  "form.submitting": "Submitting",
  "form.submit": "Submit",
  "form.showMore": "Show More Options",
  "form.hideMore": "Hide More Options",
  "form.success": "Update success!",
  "form.confirmRemove": "Remove config?",
  "form.removeDescript":
    "Please confirm whether you want to delete the configuration, and it can not be restored after delete it.",
  "form.confirm": "Confirm",
  "form.cancel": "Cancel",
  "form.nameRequired": "Name is required",
  "form.nameExists": "Name is exitst",
  "form.sortPlugin": "Sort plugins",
  "form.selectPlugin": "Select plugins",
  "form.addr": "Addr(e.g. 127.0.0.1:8001)",
  "form.weight": "Weight",
  "from.addrs": "Add addr",
  "form.proxyHeaderName": "Header Name",
  "form.proxyHeaderValue": "Header Value",
  "form.compressionGzipLevel": "Gzip Level",
  "form.compressionBrLevel": "Br Level",
  "form.compressionZstdLevel": "Zstd Level",
  "form.compressionDecompression": "Support Decompression",
  "form.adminPath": "The Path Admin Web Management",
  "form.adminIpFailLimit": "Auth Fail Ip Limit Count(default:5)",
  "form.adminAuthorization": "Base64 Value For Basic Auth(base64(user:pass))",
  "form.adminAuthorizationAdd": "Add More Authorization",
  "form.limitCategory": "The Limit Category",
  "form.limitTag": "The Limit Tag",
  "form.limitKey": "The Limit Key",
  "form.limitMax": "The Limit Max Value",
  "form.limitInterval": "The Limit Interval For Rate",
  "form.allow": "Allow",
  "form.deny": "Deny",
  "form.dirPath": "The Directory For Static Serve",
  "form.dirIndex": "Default Index File",
  "form.dirAutoIndex": "Set Auto Index For Directory",
  "form.dirChunkSize": "The Chunk Size For Static Response(default:4kb)",
  "form.dirMaxAge": "The Max Age Of Http Cache Control(e.g. 1h, 1d)",
  "form.dirCachePrivate": "The Cache As Private",
  "form.dirCharset": "The Charset Of Response",
  "form.dirDownload": "Supports Download File",
  "form.dirHeaderName": "Response Header Name",
  "form.dirHeaderValue": "Response Header Value",
  "form.dirHeaderAdd": "Add Header To Response",
  "form.requestIdAlgo": "The Algorithm For Genenrating Id(default:uuid)",
  "form.requestIdLength": "The Length Of Id(Only For Nanoid)",
  "form.requestIdHeaderName":
    "The Http Request Header Name Of Request Id(default:x-request-id)",
  "form.ipList": "The Ip List",
  "form.ipRestrictionAdd": "Add More Ip Or Ip Net",
  "form.ipRestrictionAllow": "Allow",
  "form.ipRestrictionDeny": "Deny",
  "form.ipRestrictionMessage":
    "Error Message For Invalid(default:Request is forbidden)",
  "form.ipRestrictionMode": "The Restriction Mode, Allow Or Deny",
  "form.refererRestrictionMode": "The Restriction Mode, Allow Or Deny",
  "form.refererRestrictionAllow": "Allow",
  "form.refererRestrictionDeny": "Deny",
  "form.refererList": "Referer Host List",
  "form.refererRestrictionAdd": "Add More Referer",
  "form.refererRestrictionMessage":
    "Error Message For Invalid(default:Request is forbidden)",
  "form.keyAuthQuery": "The Query Name For Key Auth",
  "form.keyAuthHeader": "The Header Name For Key Auth",
  "form.keyAuthValues": "The Key Value List",
  "form.keyAuthAdd": "Add Key Value",
  "form.keyAuthHideCredentials": "Remove Auth Information",
  "form.keyAuthFailDelay": "Auth Fail Delay Processing(e.g. 1s)",
  "form.basicAuthList":
    "The Basic Authorization List, Base64(account:password)",
  "form.basicAuthAdd": "Add Basic Auth",
  "form.basicAuthHideCredentials": "Remove Auth Information",
  "form.basicAuthFailDelay": "Auth Fail Delay Processing(e.g. 1s)",
  "form.jwtAuthHeader": "The Header Name For Key Auth",
  "form.jwtAuthQuery": "The Query Name For Key Auth",
  "form.jwtAuthCookie": "The Cookie Name For Key Auth",
  "form.jwtAuthSecret": "The Secret Of Jwt Auth",
  "form.jwtSignPath": "The Sign Path Of Jwt",
  "form.jwtSignAlgorithm": "The Sign Algorithm",
  "form.jwtAuthFailDelay": "Auth Fail Delay Processing(e.g. 1s)",
  "form.redirectHttps": "Redirect Http To Https",
  "form.redirectPrefix": "The Prefix Add To Redirect Path",
  "form.statsPath": "The Path Of Stats",
  "form.pingPath": "The Path Of Ping",
  "form.responseHeadersAddHeaderName": "Add Header Name",
  "form.responseHeadersAddHeaderValue": "Add Header Value",
  "form.responseHeadersAdd": "Add More Header",
  "form.responseHeadersSetHeaderName": "Set Header Name",
  "form.responseHeadersSetHeaderValue": "Set Header Value",
  "form.responseHeadersSet": "Set More Header",
  "form.responseHeadersRemoveHeaderName": "Remove Header Name",
  "form.responseHeadersRemove": "Remove More Header",
  "form.mockPath": "Response Match Path",
  "form.mockStats": "Response Status(default:200)",
  "form.mockResponseDelay": "Mock Response Delay Processing(e.g. 1s)",
  "form.mockHeader": "Add Response Header",
  "form.mockHeaderName": "Mock Header Name Of Response",
  "form.mockHeaderValue": "Mock Header Value Of Response",
  "form.mockData": "Response Data",
  "form.csrfTokenPath": "The Path For Get Csrf Token",
  "form.csrfName": "The Name Of Csrf Token(default:x-csrf-token)",
  "form.csrfKey": "The Secret Key For Csrf",
  "form.csrfTtl": "The Ttl Of Csrf Token(e.g. 1h)",
  "form.cacheLock": "Lock Time Concurrent Lookups To The Same Asset(e.g. 1s)",
  "form.cacheMaxFileSize":
    "The Max File Size To Cache(Bigger will be not cached, default:1mb)",
  "form.cacheNamespace": "The Name Space Of Cache",
  "form.cacheHeaders": "The Headers Value Add To Cache Key",
  "form.cacheHeadersAdd": "Add More Header For Cache key",
  "form.cacheEviction": "Enable Evicted From Storage",
  "form.cachePredictor": "Enable Predictor",
  "form.cacheMaxTtl": "Max Ttl Of Cache(e.g. 10m)",
  "form.cachePurgeIpList": "The ip list are allowed to purge cache",
  "form.cachePurgeIpListAdd": "Add more ip or ip net",
  // cors
  "form.corsPath": "The Gegexp Path For Cors(optional)",
  "form.corsAllowOrigin": "The Allow Origin",
  "form.corsAllowMethods": "The Allow Methods",
  "form.corsAllowHeaders": "The Allow Headers",
  "form.corsMaxAge": "The Cache Max Age(default:1h)",
  "form.corsAllowCredentials": "Allow Credentials",
  "form.corsExposeHeaders": "The Expose Headers",
  // accept encoding
  "form.acceptEncodingList": "The Accept Encodings, Separated By Comma",
  "form.acceptEncodingOnlyOne": "Set Only One Accept Encoding",
};
